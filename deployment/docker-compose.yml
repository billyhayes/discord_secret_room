version: '3.8'

services:
  discord-bot:
    build: .
    container_name: secret-room-bot
    restart: unless-stopped
    environment:
      - DISCORD_BOT_TOKEN=${DISCORD_BOT_TOKEN:-***REMOVED***}
      - PYTHONUNBUFFERED=1
      - TZ=America/New_York
    volumes:
      - ./logs:/app/logs
      - ./data:/app/data
    networks:
      - bot-network
    healthcheck:
      test: ["CMD-SHELL", "python3 -c 'import discord; print(\"healthy\")' || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
    deploy:
      resources:
        limits:
          memory: 512M
          cpus: '0.5'
        reservations:
          memory: 256M
          cpus: '0.25'

  # Optional: Redis for caching/sessions
  redis:
    image: redis:7-alpine
    container_name: bot-redis
    restart: unless-stopped
    volumes:
      - redis-data:/data
    networks:
      - bot-network
    command: redis-server --appendonly yes
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 3s
      retries: 3

  # Optional: Database for bot data
  postgres:
    image: postgres:15-alpine
    container_name: bot-postgres
    restart: unless-stopped
    environment:
      - POSTGRES_DB=discordbot
      - POSTGRES_USER=botuser
      - POSTGRES_PASSWORD=${DB_PASSWORD:-changeme}
    volumes:
      - postgres-data:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - bot-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U botuser"]
      interval: 30s
      timeout: 5s
      retries: 3

networks:
  bot-network:
    driver: bridge

volumes:
  redis-data:
  postgres-data:
